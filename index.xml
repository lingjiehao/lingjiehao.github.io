<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alien's Blog</title><link>https://blog.mypri.cloud/</link><description>Recent content on Alien's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 24 Apr 2021 15:44:48 +0800</lastBuildDate><atom:link href="https://blog.mypri.cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim常用操作</title><link>https://blog.mypri.cloud/post/vim%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 24 Apr 2021 15:44:48 +0800</pubDate><guid>https://blog.mypri.cloud/post/vim%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid><description>编辑二进制文件 https://vi.stackexchange.com/questions/343/how-to-edit-binary-files-with-vim
打开并编辑二进制文件, 可以使用 xxd 命令
xxd test.bin | vim - 如果这个二进制文件已经被 vim 打开(一般显示为乱码), 则重载这个文件
:%!xxd 保存为二进制
:%!xxd -r &amp;gt; new-file.bin</description></item><item><title>Systemd Daemon示例</title><link>https://blog.mypri.cloud/post/systemd-daemon%E7%A4%BA%E4%BE%8B/</link><pubDate>Sat, 03 Apr 2021 18:34:55 +0800</pubDate><guid>https://blog.mypri.cloud/post/systemd-daemon%E7%A4%BA%E4%BE%8B/</guid><description>1.新增service文件 vi /lib/systemd/system/jupyter-notebook.service
[Unit] Description=IPython notebook [Service] Type=simple PIDFile=/var/run/ipython-notebook.pid ExecStart=/home/xyz/.local/bin/anaconda/bin/jupyter-notebook --no-browser User=xyz Group=xyz WorkingDirectory=/home/xyz/work/jupyter [Install] WantedBy=multi-user.target 2.开机启动 sudo systemctl enable jupyter-notebook.service 3.启动服务 sudo systemctl start jupyter-notebook.service 2,3两步可以合为一步sudo systemctl enable jupyter-notebook.service --now
https://stackoverflow.com/questions/14297741/how-to-start-ipython-notebook-server-at-boot-as-daemon</description></item><item><title>Linux下常用软件配置</title><link>https://blog.mypri.cloud/post/linux%E4%B8%8B%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 03 Apr 2021 18:18:27 +0800</pubDate><guid>https://blog.mypri.cloud/post/linux%E4%B8%8B%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/</guid><description>Samba 下载 sudo apt install samba 修改配置文件 [share] path = /home/xyz/share/ create mask = 0664 directory mask = 0775 writable = yes valid users = xyz 其中:
[share]是你共享出来文件夹的名称 create mask 设置的是当新文件创建时的权限(该配置为664权限) directory mask 设置的是当新文件夹创建时的权限(该配置为664权限) valid users 表示只有名单内的用户才有权限访问 配置一个guest只读的共享:
[latest_qfil] path = /mnt/build/artifact/latest writable = no guest ok = yes 添加用户 sudo smbpasswd -a xyz 用户xyz必须是系统中存在的用户,和当前用户没有关系.
启动服务 sudo service smbd start Grub 记住上次选择的启动项 1.修改/etc/default/grub
GRUB_DEFAULT=saved GRUB_SAVEDEFAULT=true 2.更新grub
# Ubuntu下可使用sudo update-grub sudo grub-mkconfig -o /boot/grub/grub.</description></item><item><title>Sysfs Bin Attribute Demo</title><link>https://blog.mypri.cloud/post/sysfs-bin-attribute-demo/</link><pubDate>Sat, 03 Apr 2021 17:30:37 +0800</pubDate><guid>https://blog.mypri.cloud/post/sysfs-bin-attribute-demo/</guid><description>static ssize_t util_string_read(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t off, size_t count) { struct device *dev = kobj_to_dev(kobj); struct pci_dev *pdev = to_pci_dev(dev); struct zpci_dev *zdev = to_zpci(pdev); return memory_read_from_buffer(buf, count, &amp;amp;off, zdev-&amp;gt;util_str, sizeof(zdev-&amp;gt;util_str)); } static BIN_ATTR_RO(util_string, CLP_UTIL_STR_LEN); static struct bin_attribute *zpci_bin_attrs[] = { &amp;amp;bin_attr_util_string, NULL, }; static struct attribute_group zpci_attr_group = { .attrs = zpci_dev_attrs, .bin_attrs = zpci_bin_attrs, }; const struct attribute_group *zpci_attr_groups[] = { &amp;amp;zpci_attr_group, &amp;amp;pfip_attr_group, NULL, }; static int zpci_sysfs_init(struct device *dev) { int rc = 0; if (!</description></item><item><title>Linux命令技巧</title><link>https://blog.mypri.cloud/post/linux%E5%91%BD%E4%BB%A4%E6%8A%80%E5%B7%A7/</link><pubDate>Sat, 03 Apr 2021 16:05:29 +0800</pubDate><guid>https://blog.mypri.cloud/post/linux%E5%91%BD%E4%BB%A4%E6%8A%80%E5%B7%A7/</guid><description>tar 1.压缩文件夹时忽略.git tar --exclude-vcs -zcvf foo.tar.gz ./FOLDER_NAME https://unix.stackexchange.com/questions/18657/tar-a-folder-without-git-files
2.多线程压缩 使用pigz实现多线程压缩
tar --use-compress-program=&amp;#34;pigz --best --recursive&amp;#34; -cf archive.tar.gz YourData # 显示压缩进度 tar --use-compress-program=&amp;#34;pigz --best --recursive | pv&amp;#34; -cf archive.tar.gz YourData https://stackoverflow.com/questions/36917882/how-to-use-pigz-with-tar</description></item><item><title>Shell中的常用语法</title><link>https://blog.mypri.cloud/post/shell%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link><pubDate>Sat, 03 Apr 2021 15:40:17 +0800</pubDate><guid>https://blog.mypri.cloud/post/shell%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid><description>获取文件名/文件扩展名 ~% FILE=&amp;#34;example.tar.gz&amp;#34; ~% echo &amp;#34;${FILE%%.*}&amp;#34; example ~% echo &amp;#34;${FILE%.*}&amp;#34; example.tar ~% echo &amp;#34;${FILE#*.}&amp;#34; tar.gz ~% echo &amp;#34;${FILE##*.}&amp;#34; gz https://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash
去除字符串的前缀/后缀 有一个字符串为hello-world, 现在希望去除前缀hell和后缀ld, 得到新的字符串o-wor
string=&amp;#34;hello-world&amp;#34; prefix=&amp;#34;hell&amp;#34; suffix=&amp;#34;ld&amp;#34; 方法如下:
$ foo=${string#&amp;#34;$prefix&amp;#34;} $ foo=${foo%&amp;#34;$suffix&amp;#34;} $ echo &amp;#34;${foo}&amp;#34; o-wor https://stackoverflow.com/questions/16623835/remove-a-fixed-prefix-suffix-from-a-string-in-bash
手动向stderr输出 &amp;gt;&amp;amp;2 echo &amp;#34;error&amp;#34; https://stackoverflow.com/questions/2990414/echo-that-outputs-to-stderr
创建临时文件夹 # 创建临时文件夹 $ mktemp -d /tmp/tmp.vwjuFmclTR # 创建临时文件夹，并指定模板 $ mktemp -d -t test-XXXXX /tmp/test-4kceq https://code-maven.com/create-temporary-directory-on-linux-using-bash
判断字符串是否为空 正确做法
#!/bin/sh STRING= if [ -z &amp;#34;$STRING&amp;#34; ]; then echo &amp;#34;STRING is empty&amp;#34; fi if [ -n &amp;#34;$STRING&amp;#34; ]; then echo &amp;#34;STRING is not empty&amp;#34; fi --------------- 输出正确结果： root@james-desktop:~# .</description></item><item><title>Ubuntu挂载远程目录</title><link>https://blog.mypri.cloud/post/ubuntu%E6%8C%82%E8%BD%BD%E8%BF%9C%E7%A8%8B%E7%9B%AE%E5%BD%95/</link><pubDate>Sat, 03 Apr 2021 15:20:33 +0800</pubDate><guid>https://blog.mypri.cloud/post/ubuntu%E6%8C%82%E8%BD%BD%E8%BF%9C%E7%A8%8B%E7%9B%AE%E5%BD%95/</guid><description>挂载samba 安装cifs-utils sudo apt-get install cifs-utils 手动挂载 # 注意这里的samba地址以&amp;#39;/&amp;#39;分隔， 不是&amp;#39;\&amp;#39; sudo mount -t cifs -o user=test@demo.com //192.168.1.1/my_share /mnt/samba fstab //192.168.1.1/my_share /mnt/samba cifs user=test@demo.com,pass=123 0 0 参考:
https://support.zadarastorage.com/hc/en-us/articles/213024986-How-to-Mount-a-SMB-Share-in-Ubuntu 挂载sshfs 安装sshfs sudo apt-get install sshfs 手动挂载 sudo sshfs -o allow_other root@xxx.xxx.xxx.xxx:/ /mnt/droplet 还可以指定密钥
sudo sshfs -o allow_other,IdentityFile=~/.ssh/id_rsa root@xxx.xxx.xxx.xxx:/ /mnt/droplet 参考:
https://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-ssh https://unix.stackexchange.com/questions/59685/sshfs-mount-sudo-gets-permission-denied</description></item><item><title>Linux国内源</title><link>https://blog.mypri.cloud/post/linux%E5%9B%BD%E5%86%85%E6%BA%90/</link><pubDate>Sat, 03 Apr 2021 12:26:52 +0800</pubDate><guid>https://blog.mypri.cloud/post/linux%E5%9B%BD%E5%86%85%E6%BA%90/</guid><description>地址 名称 地址 腾讯云 mirrors.tencent.com 腾讯云(内网) mirrors.tencentyun.com 清华 mirrors.tuna.tsinghua.edu.cn USTC mirrors.ustc.edu.cn 阿里云 mirrors.aliyun.com 版本 Ubuntu版本 名称 18.04 bionic 20.04 focal 16.04 xenial Debian版本 名称 10 buster 9 stretch sources.</description></item><item><title>Ubuntu设置动态IP与静态IP</title><link>https://blog.mypri.cloud/post/ubuntu%E8%AE%BE%E7%BD%AE%E5%8A%A8%E6%80%81ip%E4%B8%8E%E9%9D%99%E6%80%81ip/</link><pubDate>Sat, 03 Apr 2021 12:14:23 +0800</pubDate><guid>https://blog.mypri.cloud/post/ubuntu%E8%AE%BE%E7%BD%AE%E5%8A%A8%E6%80%81ip%E4%B8%8E%E9%9D%99%E6%80%81ip/</guid><description>动态IP cat /etc/netplan/01-netcfg.yaml
# This file describes the network interfaces available on your system # For more information, see netplan(5). network: version: 2 renderer: networkd ethernets: eth0: dhcp4: yes 静态IP cat /etc/netplan/01-netcfg.yaml
# This file describes the network interfaces available on your system # For more information, see netplan(5). network: version: 2 renderer: networkd ethernets: eth0: dhcp4: no addresses: [192.168.1.222/24] gateway4: 192.168.1.1 nameservers: addresses: [8.8.8.8,8.8.4.4]</description></item><item><title>在Gerrit上建立Android代码仓库</title><link>https://blog.mypri.cloud/post/%E5%9C%A8gerrit%E4%B8%8A%E5%BB%BA%E7%AB%8Bandroid%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/</link><pubDate>Fri, 02 Apr 2021 13:30:57 +0800</pubDate><guid>https://blog.mypri.cloud/post/%E5%9C%A8gerrit%E4%B8%8A%E5%BB%BA%E7%AB%8Bandroid%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/</guid><description>GIT_USR=gerrit-admin GERRIT_HOST=192.168.1.1 PARENT_REPO=aosp-parent-repo GERRIT_REPO_OWNER_GRP=aosp-admin repo forall -vc &amp;#39;ssh -p 29418 $GIT_USR@$GERRIT_HOST gerrit create-project --owner $GERRIT_REPO_OWNER_GRP $REPO_PROJECT;&amp;#39; repo forall -vc &amp;#39;ssh -p 29418 $GIT_USR@$GERRIT_HOST gerrit set-project-parent --parent $PARENT_REPO $REPO_PROJECT;&amp;#39; repo forall -c &amp;#39;git push ssh://$GIT_USR@$GERRIT_HOST:29418/$REPO_PROJECT +refs/heads/* +refs/tags/*&amp;#39;</description></item><item><title>LVM使用记录</title><link>https://blog.mypri.cloud/post/lvm%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 02 Apr 2021 11:28:31 +0800</pubDate><guid>https://blog.mypri.cloud/post/lvm%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</guid><description>在新的硬盘/分区上使用lvm 1.创建新分区 # 创建sda1 fdisk /dev/sda g n ... w 2.创建PV pvcreate /dev/sda1 3.创建VG # vg1为VG的名称, sda1为之前创建好的PV vgcreate vg1 /dev/sda1 # 同时添加多块硬盘 vgcreate vg1 /dev/sda1 /dev/sdb1 4.创建LV # 创建大小为10G, 名为test1的LV # vg1为之前创建的VG名称 lvcreate -L 10G -n &amp;#34;test1&amp;#34; vg1 这一步完成后, 会创建一个新的硬盘/dev/vg1/test1
5.格式化新创建的硬盘 mkfs.ext4 /dev/vg1/test1 扩容 LV扩容 # 为/dev/vg1/test1新增20GB空间 lvextend -L +20G vg1/test1 # 重载逻辑卷大小 resize2fs -p /dev/vg1/test1 VG扩容 # 向vg1中添加新的PV:/dev/sdc1 vgextend vg1 /dev/sdc1</description></item><item><title>Test</title><link>https://blog.mypri.cloud/post/test/</link><pubDate>Fri, 02 Apr 2021 01:10:56 +0800</pubDate><guid>https://blog.mypri.cloud/post/test/</guid><description>中文测试 这是中文测试
代码测试 #include &amp;lt;stdio.h&amp;gt;int main(void) { printf(&amp;#34;Hello, world!\n&amp;#34;); return 0; }</description></item></channel></rss>